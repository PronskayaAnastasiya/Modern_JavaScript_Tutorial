/*
!Finally или просто код?

Сравните два фрагмента кода.
Первый использует finally для выполнения кода после try..catch:

Второй фрагмент просто ставит очистку после try..catch:

Нам определённо нужна очистка после работы, неважно возникли ошибки или нет.
Есть ли здесь преимущество в использовании finally или оба фрагмента 
кода одинаковы? Если такое преимущество есть, то дайте пример, когда оно 
проявляется.
*/

//*1
try {
    //начать работу
    //работать
} catch (e) {
    //обработать ошибку
} finally {
    //очистить рабочее пространство
}

//*2
try {
    //начать работу
    //работать
} catch (e) {
    //обработать ошибку
}
//очистить рабочее пространство

function f() {
    try {
        console.log('Начало');
        return "result"
    } catch (e) {
        //...
    } finally {
        console.log('Очистка');
    }
}
function f2() {
    try {
        console.log('начало');
        throw Error("ошибка");
    } catch (err) {
        //...
        if ("не могу обработать ошибку") {
            throw e;
        }
    } finally {
        console.log("очистка")
    }
}

f();

try {
    f2();
} catch (error) {
    console.log(error);
};

